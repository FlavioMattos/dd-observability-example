version: '3'
services:
  agent:
    image: datadog/agent:${AGENT_VERSION}
    hostname: datadog-agent
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_APM_ENABLED=true
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_ENV=development
      - DD_DOCKER_LABELS_AS_TAGS={"my.custom.label.team":"devops bootcamp"}
      - DD_TAGS=${TAG_DEFAULTS}
      - DD_SITE=${DD_SITE}
    ports:
      - 8126:8126/tcp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
    labels:
      com.datadoghq.ad.logs: '[{"source": "agent", "service": "agent"}]'
  discounts:
    image: "ddtraining/discounts-fixed:2.1.4"
    hostname: "discounts-service"
    environment:
      - FLASK_APP=discounts.py
      - FLASK_DEBUG=1
      - POSTGRES_PASSWORD=${PG_PASS}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_HOST=db
      - DD_SERVICE=discounts-service
      - DD_AGENT_HOST=agent
      - DD_LOGS_INJECTION=true
      - DD_TRACE_ANALYTICS_ENABLED=true
      - DD_PROFILING_ENABLED=true
      - DD_ENV=development
      - DD_VERSION=1.1
    command: ddtrace-run flask run --port=5001 --host=0.0.0.0
    ports:
      - "5001:5001"
    depends_on:
      - agent
      - db
    labels:
      com.datadoghq.ad.logs: '[{"source": "python", "service": "discounts-service"}]'
      my.custom.label.team: "discount"
  frontend:
    image: "ddtraining/storefront-fixed:2.1.4"
    hostname: "store-frontend"
    environment:
      - DD_AGENT_HOST=agent
      - DD_LOGS_INJECTION=true
      - DD_TRACE_ANALYTICS_ENABLED=true
      - DD_SERVICE=store-frontend
      - DB_USERNAME=${PG_USER}
      - DB_PASSWORD=${PG_PASS}
      - DD_VERSION=1.1
      - DD_CLIENT_TOKEN
      - DD_APPLICATION_ID
      - DD_ENV=development
      - DD_SITE=${DD_SITE}
    command: sh docker-entrypoint.sh
    ports:
      - "3000:3000"
    depends_on:
      - agent
      - db
      - discounts
      - advertisements
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:3000 | grep -q 'HTTP/1.1 200 OK'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    labels:
      com.datadoghq.ad.logs: '[{"source": "ruby", "service": "store-frontend"}]'
      my.custom.label.team: "frontend"
  advertisements:
    image: "ddtraining/advertisements-fixed:2.1.4"
    hostname: "ads-service"
    environment:
      - FLASK_APP=ads.py
      - FLASK_DEBUG=1
      - POSTGRES_PASSWORD=${PG_PASS}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_HOST=db
      - DD_SERVICE=advertisements-service
      - DD_AGENT_HOST=agent
      - DD_LOGS_INJECTION=true
      - DD_TRACE_ANALYTICS_ENABLED=true
      - DD_PROFILING_ENABLED=true
      - DD_ENV=development
      - DD_VERSION=1.1
    command: ddtrace-run flask run --port=5002 --host=0.0.0.0
    ports:
      - "5002:5002"
    depends_on:
      - agent
      - db
    labels:
      com.datadoghq.ad.logs: '[{"source": "python", "service": "ads-service"}]'
      my.custom.label.team: "advertisements"
  db:
    image: postgres:11-alpine
    hostname: "postgres"
    restart: always
    environment:
      - POSTGRES_PASSWORD=${PG_PASS}
      - POSTGRES_USER=${PG_USER}
      - DD_ENV=development
    labels:
      com.datadoghq.ad.logs: '[{"source": "postgresql", "service": "postgres"}]'
  traffic-replay:
    image: "ddtraining/traffic-replay:latest"
    hostname: "traffic-generator"
    environment:
      - FRONTEND_HOST=store-frontend
      - FRONTEND_PORT=3000
      - DD_ENV=development
    depends_on:
      - agent
      - frontend
      - db
      - discounts
      - advertisements